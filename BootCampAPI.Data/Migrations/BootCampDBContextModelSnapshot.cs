// <auto-generated />
using BootCampAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BootCampAPI.Data.Migrations
{
    [DbContext(typeof(BootCampDBContext))]
    partial class BootCampDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("BootCampAPI.Data.Entities.AuthorEntity", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Author", (string)null);
                });

            modelBuilder.Entity("BootCampAPI.Data.Entities.BookEntity", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("BookSeriesID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("PageCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PagesRead")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorID");

                    b.HasIndex("BookSeriesID");

                    b.ToTable("Book", (string)null);
                });

            modelBuilder.Entity("BootCampAPI.Data.Entities.BookSeriesEntity", b =>
                {
                    b.Property<int>("BookSeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookSeriesId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookSeries", (string)null);
                });

            modelBuilder.Entity("BootCampAPI.Data.Entities.BookEntity", b =>
                {
                    b.HasOne("BootCampAPI.Data.Entities.AuthorEntity", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BootCampAPI.Data.Entities.BookSeriesEntity", "BookSeries")
                        .WithMany("BooksInSeries")
                        .HasForeignKey("BookSeriesID");

                    b.Navigation("Author");

                    b.Navigation("BookSeries");
                });

            modelBuilder.Entity("BootCampAPI.Data.Entities.BookSeriesEntity", b =>
                {
                    b.HasOne("BootCampAPI.Data.Entities.AuthorEntity", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BootCampAPI.Data.Entities.BookSeriesEntity", b =>
                {
                    b.Navigation("BooksInSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
